{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "chainId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "bonderFee",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "tokenIndex",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "amountOutMin",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "deadline",
								"type": "uint256"
							}
						],
						"internalType": "struct SwapData",
						"name": "swapData",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "tokenIndex",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "amountOutMin",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "deadline",
								"type": "uint256"
							}
						],
						"internalType": "struct SwapData",
						"name": "destinationSwapData",
						"type": "tuple"
					},
					{
						"internalType": "address",
						"name": "bonder",
						"type": "address"
					}
				],
				"name": "swapAndSend",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"solidity/contracts/BridgewhenCheap.sol": "L2_AmmWrapper"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc",
			"license": "MIT",
			"urls": [
				"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010",
				"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"solidity/contracts/BridgewhenCheap.sol": {
			"keccak256": "0xb5c4edfc89b462021ab024a7e3d8f75bc4abac822de3ac175ed6a98803d1a9a3",
			"license": "MIT",
			"urls": [
				"bzz-raw://f2b4ec0117e8fee384b32af814cf30481d31881a07da3d6bbe78b9c317948e27",
				"dweb:/ipfs/QmUgwd7YCxcscEp1s9qUSSGoeTsXtYhXjCb6KBhWTEYxuz"
			]
		}
	},
	"version": 1
}